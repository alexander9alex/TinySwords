//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Code.Gameplay.Features.NearestEntitiesCollection;

public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAllyBuffer;

    public static Entitas.IMatcher<GameEntity> AllyBuffer {
        get {
            if (_matcherAllyBuffer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AllyBuffer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAllyBuffer = matcher;
            }

            return _matcherAllyBuffer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AllyBuffer allyBuffer { get { return (AllyBuffer)GetComponent(GameComponentsLookup.AllyBuffer); } }
    public System.Collections.Generic.List<int> AllyBuffer { get { return allyBuffer.Value; } }
    public bool hasAllyBuffer { get { return HasComponent(GameComponentsLookup.AllyBuffer); } }

    public GameEntity AddAllyBuffer(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.AllyBuffer;
        var component = (AllyBuffer)CreateComponent(index, typeof(AllyBuffer));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAllyBuffer(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.AllyBuffer;
        var component = (AllyBuffer)CreateComponent(index, typeof(AllyBuffer));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAllyBuffer() {
        RemoveComponent(GameComponentsLookup.AllyBuffer);
        return this;
    }
}
