//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveAnimator;

    public static Entitas.IMatcher<GameEntity> MoveAnimator {
        get {
            if (_matcherMoveAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveAnimator = matcher;
            }

            return _matcherMoveAnimator;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Animations.MoveAnimator moveAnimator { get { return (Code.Gameplay.Features.Animations.MoveAnimator)GetComponent(GameComponentsLookup.MoveAnimator); } }
    public Code.Gameplay.Features.Units.Animations.Animators.IMoveAnimator MoveAnimator { get { return moveAnimator.Value; } }
    public bool hasMoveAnimator { get { return HasComponent(GameComponentsLookup.MoveAnimator); } }

    public GameEntity AddMoveAnimator(Code.Gameplay.Features.Units.Animations.Animators.IMoveAnimator newValue) {
        var index = GameComponentsLookup.MoveAnimator;
        var component = (Code.Gameplay.Features.Animations.MoveAnimator)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.MoveAnimator));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMoveAnimator(Code.Gameplay.Features.Units.Animations.Animators.IMoveAnimator newValue) {
        var index = GameComponentsLookup.MoveAnimator;
        var component = (Code.Gameplay.Features.Animations.MoveAnimator)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.MoveAnimator));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMoveAnimator() {
        RemoveComponent(GameComponentsLookup.MoveAnimator);
        return this;
    }
}
