//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAllActionTypeIds;

    public static Entitas.IMatcher<GameEntity> AllActionTypeIds {
        get {
            if (_matcherAllActionTypeIds == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AllActionTypeIds);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAllActionTypeIds = matcher;
            }

            return _matcherAllActionTypeIds;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.FastInteract.AllActionTypeIds allActionTypeIds { get { return (Code.Gameplay.Features.FastInteract.AllActionTypeIds)GetComponent(GameComponentsLookup.AllActionTypeIds); } }
    public System.Collections.Generic.List<Code.UI.Buttons.Data.ControlActionTypeId> AllActionTypeIds { get { return allActionTypeIds.Value; } }
    public bool hasAllActionTypeIds { get { return HasComponent(GameComponentsLookup.AllActionTypeIds); } }

    public GameEntity AddAllActionTypeIds(System.Collections.Generic.List<Code.UI.Buttons.Data.ControlActionTypeId> newValue) {
        var index = GameComponentsLookup.AllActionTypeIds;
        var component = (Code.Gameplay.Features.FastInteract.AllActionTypeIds)CreateComponent(index, typeof(Code.Gameplay.Features.FastInteract.AllActionTypeIds));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAllActionTypeIds(System.Collections.Generic.List<Code.UI.Buttons.Data.ControlActionTypeId> newValue) {
        var index = GameComponentsLookup.AllActionTypeIds;
        var component = (Code.Gameplay.Features.FastInteract.AllActionTypeIds)CreateComponent(index, typeof(Code.Gameplay.Features.FastInteract.AllActionTypeIds));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAllActionTypeIds() {
        RemoveComponent(GameComponentsLookup.AllActionTypeIds);
        return this;
    }
}
