//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveAvoidancePriority;

    public static Entitas.IMatcher<GameEntity> MoveAvoidancePriority {
        get {
            if (_matcherMoveAvoidancePriority == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveAvoidancePriority);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveAvoidancePriority = matcher;
            }

            return _matcherMoveAvoidancePriority;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Move.MoveAvoidancePriority moveAvoidancePriority { get { return (Code.Gameplay.Features.Move.MoveAvoidancePriority)GetComponent(GameComponentsLookup.MoveAvoidancePriority); } }
    public int MoveAvoidancePriority { get { return moveAvoidancePriority.Value; } }
    public bool hasMoveAvoidancePriority { get { return HasComponent(GameComponentsLookup.MoveAvoidancePriority); } }

    public GameEntity AddMoveAvoidancePriority(int newValue) {
        var index = GameComponentsLookup.MoveAvoidancePriority;
        var component = (Code.Gameplay.Features.Move.MoveAvoidancePriority)CreateComponent(index, typeof(Code.Gameplay.Features.Move.MoveAvoidancePriority));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMoveAvoidancePriority(int newValue) {
        var index = GameComponentsLookup.MoveAvoidancePriority;
        var component = (Code.Gameplay.Features.Move.MoveAvoidancePriority)CreateComponent(index, typeof(Code.Gameplay.Features.Move.MoveAvoidancePriority));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMoveAvoidancePriority() {
        RemoveComponent(GameComponentsLookup.MoveAvoidancePriority);
        return this;
    }
}
