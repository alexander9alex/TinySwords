//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDisplayTimer;

    public static Entitas.IMatcher<GameEntity> DisplayTimer {
        get {
            if (_matcherDisplayTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DisplayTimer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDisplayTimer = matcher;
            }

            return _matcherDisplayTimer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Animations.DisplayTimer displayTimer { get { return (Code.Gameplay.Features.Animations.DisplayTimer)GetComponent(GameComponentsLookup.DisplayTimer); } }
    public float DisplayTimer { get { return displayTimer.Value; } }
    public bool hasDisplayTimer { get { return HasComponent(GameComponentsLookup.DisplayTimer); } }

    public GameEntity AddDisplayTimer(float newValue) {
        var index = GameComponentsLookup.DisplayTimer;
        var component = (Code.Gameplay.Features.Animations.DisplayTimer)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.DisplayTimer));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDisplayTimer(float newValue) {
        var index = GameComponentsLookup.DisplayTimer;
        var component = (Code.Gameplay.Features.Animations.DisplayTimer)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.DisplayTimer));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDisplayTimer() {
        RemoveComponent(GameComponentsLookup.DisplayTimer);
        return this;
    }
}
