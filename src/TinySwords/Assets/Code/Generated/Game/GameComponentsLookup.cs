//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Id = 1;
    public const int InitializationRequest = 2;
    public const int Initialized = 3;
    public const int Processed = 4;
    public const int SelfDestructTimer = 5;
    public const int View = 6;
    public const int ViewPrefab = 7;
    public const int Transform = 8;
    public const int WorldPosition = 9;
    public const int MakeDecisionRequest = 10;
    public const int UnitAI = 11;
    public const int UnitDecision = 12;
    public const int AnimateAttackRequest = 13;
    public const int AnimationSpeedChanger = 14;
    public const int AttackAnimator = 15;
    public const int AttackCooldown = 16;
    public const int Attacking = 17;
    public const int AttackInterval = 18;
    public const int AttackRequest = 19;
    public const int CanAttack = 20;
    public const int CanAttackNow = 21;
    public const int FinishAttack = 22;
    public const int MakeHit = 23;
    public const int NotAttacking = 24;
    public const int Building = 25;
    public const int BuildTypeId = 26;
    public const int Castle = 27;
    public const int AllyBuffer = 28;
    public const int AllyTargetId = 29;
    public const int CollectAlliesRadius = 30;
    public const int CollectReachedTargetsRadius = 31;
    public const int CollectTargetsRadius = 32;
    public const int ReachedTargetBuffer = 33;
    public const int TargetBuffer = 34;
    public const int TimeSinceLastVisionUpdated = 35;
    public const int UpdateFieldOfVision = 36;
    public const int UpdateFieldOfVisionInterval = 37;
    public const int UpdateFieldOfVisionNowRequest = 38;
    public const int UpdateFieldOfVisionTimer = 39;
    public const int VisibleEntityBuffer = 40;
    public const int VisionRadius = 41;
    public const int AimedAttackCommand = 42;
    public const int ApplyCommand = 43;
    public const int CancelCommand = 44;
    public const int Command = 45;
    public const int CommandTypeId = 46;
    public const int MoveCommand = 47;
    public const int MoveWithAttackCommand = 48;
    public const int ProcessCommandRequest = 49;
    public const int ProcessIncorrectCommandRequest = 50;
    public const int RemovePreviousCommand = 51;
    public const int SelectedCommand = 52;
    public const int UserCommand = 53;
    public const int DeathAnimator = 54;
    public const int DisplayTimer = 55;
    public const int HideTimer = 56;
    public const int AnimateTakenDamage = 57;
    public const int CasterId = 58;
    public const int DamageEffect = 59;
    public const int DamageTakenAnimator = 60;
    public const int EffectTypeId = 61;
    public const int EffectValue = 62;
    public const int TargetId = 63;
    public const int AllUnitCommandTypeIds = 64;
    public const int FastInteraction = 65;
    public const int Focused = 66;
    public const int Focusing = 67;
    public const int FocusRequest = 68;
    public const int Unfocused = 69;
    public const int CenterPosition = 70;
    public const int CreateHighlightRequest = 71;
    public const int Highlight = 72;
    public const int HighlightEnded = 73;
    public const int RectTransform = 74;
    public const int Size = 75;
    public const int HpBar = 76;
    public const int CreatedNow = 77;
    public const int CreateIndicator = 78;
    public const int DestructOldIndicator = 79;
    public const int Indicator = 80;
    public const int IndicatorTypeId = 81;
    public const int TeleportationToTarget = 82;
    public const int ActionEnded = 83;
    public const int ActionStarted = 84;
    public const int EndPosition = 85;
    public const int MouseScreenPosition = 86;
    public const int ScreenPosition = 87;
    public const int StartPosition = 88;
    public const int ConvertWhenGroup = 89;
    public const int Destination = 90;
    public const int FollowToTarget = 91;
    public const int Idle = 92;
    public const int LookDirection = 93;
    public const int Movable = 94;
    public const int Move = 95;
    public const int MoveAnimator = 96;
    public const int MoveCamera = 97;
    public const int MoveDirection = 98;
    public const int AddToNavMeshCachedSources = 99;
    public const int BuildNavMeshAtStart = 100;
    public const int NavMesh = 101;
    public const int NavMeshAgent = 102;
    public const int NavMeshCollectSourcesCache = 103;
    public const int NavMeshCollectSources = 104;
    public const int NavMeshRootSources = 105;
    public const int NavMeshSurface = 106;
    public const int NotAddedNavMeshRootSource = 107;
    public const int TurnOnNavMeshAgent = 108;
    public const int UpdateNavMesh = 109;
    public const int MultipleSelectionRequest = 110;
    public const int Selectable = 111;
    public const int Selected = 112;
    public const int SelectedChanged = 113;
    public const int SelectedNow = 114;
    public const int SelectingAnimator = 115;
    public const int SingleSelectionRequest = 116;
    public const int Unselected = 117;
    public const int UnselectPreviouslySelectedRequest = 118;
    public const int UpdateHudControlButtons = 119;
    public const int AudioClip = 120;
    public const int AudioSource = 121;
    public const int CreateSound = 122;
    public const int Delay = 123;
    public const int InitializeSound = 124;
    public const int MaxPitch = 125;
    public const int MinPitch = 126;
    public const int PlaySoundRequest = 127;
    public const int SoundId = 128;
    public const int Volume = 129;
    public const int Alive = 130;
    public const int AttackReach = 131;
    public const int CurrentHp = 132;
    public const int Damage = 133;
    public const int Dead = 134;
    public const int LegsPositionOffset = 135;
    public const int MaxHp = 136;
    public const int NotifyAlliesAboutTarget = 137;
    public const int OffsetPositionByLegs = 138;
    public const int Speed = 139;
    public const int TeamColor = 140;
    public const int Unit = 141;
    public const int UnitTypeId = 142;
    public const int CurrentAvoidancePriority = 143;
    public const int IdleAvoidancePriority = 144;
    public const int MoveAvoidancePriority = 145;

    public const int TotalComponents = 146;

    public static readonly string[] componentNames = {
        "Destructed",
        "Id",
        "InitializationRequest",
        "Initialized",
        "Processed",
        "SelfDestructTimer",
        "View",
        "ViewPrefab",
        "Transform",
        "WorldPosition",
        "MakeDecisionRequest",
        "UnitAI",
        "UnitDecision",
        "AnimateAttackRequest",
        "AnimationSpeedChanger",
        "AttackAnimator",
        "AttackCooldown",
        "Attacking",
        "AttackInterval",
        "AttackRequest",
        "CanAttack",
        "CanAttackNow",
        "FinishAttack",
        "MakeHit",
        "NotAttacking",
        "Building",
        "BuildTypeId",
        "Castle",
        "AllyBuffer",
        "AllyTargetId",
        "CollectAlliesRadius",
        "CollectReachedTargetsRadius",
        "CollectTargetsRadius",
        "ReachedTargetBuffer",
        "TargetBuffer",
        "TimeSinceLastVisionUpdated",
        "UpdateFieldOfVision",
        "UpdateFieldOfVisionInterval",
        "UpdateFieldOfVisionNowRequest",
        "UpdateFieldOfVisionTimer",
        "VisibleEntityBuffer",
        "VisionRadius",
        "AimedAttackCommand",
        "ApplyCommand",
        "CancelCommand",
        "Command",
        "CommandTypeId",
        "MoveCommand",
        "MoveWithAttackCommand",
        "ProcessCommandRequest",
        "ProcessIncorrectCommandRequest",
        "RemovePreviousCommand",
        "SelectedCommand",
        "UserCommand",
        "DeathAnimator",
        "DisplayTimer",
        "HideTimer",
        "AnimateTakenDamage",
        "CasterId",
        "DamageEffect",
        "DamageTakenAnimator",
        "EffectTypeId",
        "EffectValue",
        "TargetId",
        "AllUnitCommandTypeIds",
        "FastInteraction",
        "Focused",
        "Focusing",
        "FocusRequest",
        "Unfocused",
        "CenterPosition",
        "CreateHighlightRequest",
        "Highlight",
        "HighlightEnded",
        "RectTransform",
        "Size",
        "HpBar",
        "CreatedNow",
        "CreateIndicator",
        "DestructOldIndicator",
        "Indicator",
        "IndicatorTypeId",
        "TeleportationToTarget",
        "ActionEnded",
        "ActionStarted",
        "EndPosition",
        "MouseScreenPosition",
        "ScreenPosition",
        "StartPosition",
        "ConvertWhenGroup",
        "Destination",
        "FollowToTarget",
        "Idle",
        "LookDirection",
        "Movable",
        "Move",
        "MoveAnimator",
        "MoveCamera",
        "MoveDirection",
        "AddToNavMeshCachedSources",
        "BuildNavMeshAtStart",
        "NavMesh",
        "NavMeshAgent",
        "NavMeshCollectSourcesCache",
        "NavMeshCollectSources",
        "NavMeshRootSources",
        "NavMeshSurface",
        "NotAddedNavMeshRootSource",
        "TurnOnNavMeshAgent",
        "UpdateNavMesh",
        "MultipleSelectionRequest",
        "Selectable",
        "Selected",
        "SelectedChanged",
        "SelectedNow",
        "SelectingAnimator",
        "SingleSelectionRequest",
        "Unselected",
        "UnselectPreviouslySelectedRequest",
        "UpdateHudControlButtons",
        "AudioClip",
        "AudioSource",
        "CreateSound",
        "Delay",
        "InitializeSound",
        "MaxPitch",
        "MinPitch",
        "PlaySoundRequest",
        "SoundId",
        "Volume",
        "Alive",
        "AttackReach",
        "CurrentHp",
        "Damage",
        "Dead",
        "LegsPositionOffset",
        "MaxHp",
        "NotifyAlliesAboutTarget",
        "OffsetPositionByLegs",
        "Speed",
        "TeamColor",
        "Unit",
        "UnitTypeId",
        "CurrentAvoidancePriority",
        "IdleAvoidancePriority",
        "MoveAvoidancePriority"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Id),
        typeof(Code.Common.InitializationRequest),
        typeof(Code.Common.Initialized),
        typeof(Code.Common.Processed),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.AI.MakeDecisionRequest),
        typeof(Code.Gameplay.Features.AI.UnitAIComponent),
        typeof(Code.Gameplay.Features.AI.UnitDecisionComponent),
        typeof(Code.Gameplay.Features.Battle.AnimateAttackRequest),
        typeof(Code.Gameplay.Features.Battle.AnimationSpeedChanger),
        typeof(Code.Gameplay.Features.Battle.AttackAnimator),
        typeof(Code.Gameplay.Features.Battle.AttackCooldown),
        typeof(Code.Gameplay.Features.Battle.Attacking),
        typeof(Code.Gameplay.Features.Battle.AttackInterval),
        typeof(Code.Gameplay.Features.Battle.AttackRequest),
        typeof(Code.Gameplay.Features.Battle.CanAttack),
        typeof(Code.Gameplay.Features.Battle.CanAttackNow),
        typeof(Code.Gameplay.Features.Battle.FinishAttack),
        typeof(Code.Gameplay.Features.Battle.MakeHit),
        typeof(Code.Gameplay.Features.Battle.NotAttacking),
        typeof(Code.Gameplay.Features.Build.Building),
        typeof(Code.Gameplay.Features.Build.BuildTypeIdComponent),
        typeof(Code.Gameplay.Features.Build.Castle),
        typeof(Code.Gameplay.Features.CollectEntities.AllyBuffer),
        typeof(Code.Gameplay.Features.CollectEntities.AllyTargetId),
        typeof(Code.Gameplay.Features.CollectEntities.CollectAlliesRadius),
        typeof(Code.Gameplay.Features.CollectEntities.CollectReachedTargetsRadius),
        typeof(Code.Gameplay.Features.CollectEntities.CollectTargetsRadius),
        typeof(Code.Gameplay.Features.CollectEntities.ReachedTargetBuffer),
        typeof(Code.Gameplay.Features.CollectEntities.TargetBuffer),
        typeof(Code.Gameplay.Features.CollectEntities.TimeSinceLastVisionUpdated),
        typeof(Code.Gameplay.Features.CollectEntities.UpdateFieldOfVision),
        typeof(Code.Gameplay.Features.CollectEntities.UpdateFieldOfVisionInterval),
        typeof(Code.Gameplay.Features.CollectEntities.UpdateFieldOfVisionNowRequest),
        typeof(Code.Gameplay.Features.CollectEntities.UpdateFieldOfVisionTimer),
        typeof(Code.Gameplay.Features.CollectEntities.VisibleEntityBuffer),
        typeof(Code.Gameplay.Features.CollectEntities.VisionRadius),
        typeof(Code.Gameplay.Features.Command.AimedAttackCommand),
        typeof(Code.Gameplay.Features.Command.ApplyCommand),
        typeof(Code.Gameplay.Features.Command.CancelCommand),
        typeof(Code.Gameplay.Features.Command.Command),
        typeof(Code.Gameplay.Features.Command.CommandTypeIdComponent),
        typeof(Code.Gameplay.Features.Command.MoveCommand),
        typeof(Code.Gameplay.Features.Command.MoveWithAttackCommand),
        typeof(Code.Gameplay.Features.Command.ProcessCommandRequest),
        typeof(Code.Gameplay.Features.Command.ProcessIncorrectCommandRequest),
        typeof(Code.Gameplay.Features.Command.RemovePreviousCommand),
        typeof(Code.Gameplay.Features.Command.SelectedCommand),
        typeof(Code.Gameplay.Features.Command.UserCommandComponent),
        typeof(Code.Gameplay.Features.Death.DeathAnimator),
        typeof(Code.Gameplay.Features.Death.DisplayTimer),
        typeof(Code.Gameplay.Features.Death.HideTimer),
        typeof(Code.Gameplay.Features.Effects.AnimateTakenDamage),
        typeof(Code.Gameplay.Features.Effects.CasterId),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.DamageTakenAnimator),
        typeof(Code.Gameplay.Features.Effects.EffectTypeIdComponent),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.FastInteraction.AllUnitCommandTypeIds),
        typeof(Code.Gameplay.Features.FastInteraction.FastInteraction),
        typeof(Code.Gameplay.Features.Focus.Focused),
        typeof(Code.Gameplay.Features.Focus.Focusing),
        typeof(Code.Gameplay.Features.Focus.FocusRequest),
        typeof(Code.Gameplay.Features.Focus.Unfocused),
        typeof(Code.Gameplay.Features.Highlight.CenterPosition),
        typeof(Code.Gameplay.Features.Highlight.CreateHighlightRequest),
        typeof(Code.Gameplay.Features.Highlight.Highlight),
        typeof(Code.Gameplay.Features.Highlight.HighlightEnded),
        typeof(Code.Gameplay.Features.Highlight.RectTransformComponent),
        typeof(Code.Gameplay.Features.Highlight.Size),
        typeof(Code.Gameplay.Features.HpBars.HpBarComponent),
        typeof(Code.Gameplay.Features.Indicators.CreatedNow),
        typeof(Code.Gameplay.Features.Indicators.CreateIndicator),
        typeof(Code.Gameplay.Features.Indicators.DestructOldIndicator),
        typeof(Code.Gameplay.Features.Indicators.Indicator),
        typeof(Code.Gameplay.Features.Indicators.IndicatorTypeIdComponent),
        typeof(Code.Gameplay.Features.Indicators.TeleportationToTarget),
        typeof(Code.Gameplay.Features.Input.ActionEnded),
        typeof(Code.Gameplay.Features.Input.ActionStarted),
        typeof(Code.Gameplay.Features.Input.EndPosition),
        typeof(Code.Gameplay.Features.Input.MouseScreenPosition),
        typeof(Code.Gameplay.Features.Input.ScreenPosition),
        typeof(Code.Gameplay.Features.Input.StartPosition),
        typeof(Code.Gameplay.Features.Move.ConvertWhenGroup),
        typeof(Code.Gameplay.Features.Move.Destination),
        typeof(Code.Gameplay.Features.Move.FollowToTarget),
        typeof(Code.Gameplay.Features.Move.Idle),
        typeof(Code.Gameplay.Features.Move.LookDirection),
        typeof(Code.Gameplay.Features.Move.Movable),
        typeof(Code.Gameplay.Features.Move.Move),
        typeof(Code.Gameplay.Features.Move.MoveAnimator),
        typeof(Code.Gameplay.Features.Move.MoveCamera),
        typeof(Code.Gameplay.Features.Move.MoveDirection),
        typeof(Code.Gameplay.Features.NavMesh.AddToNavMeshCachedSources),
        typeof(Code.Gameplay.Features.NavMesh.BuildNavMeshAtStart),
        typeof(Code.Gameplay.Features.NavMesh.NavMesh),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshAgentComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshCollectSourcesCacheComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshCollectSourcesComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshRootSourcesComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshSurfaceComponent),
        typeof(Code.Gameplay.Features.NavMesh.NotAddedNavMeshRootSource),
        typeof(Code.Gameplay.Features.NavMesh.TurnOnNavMeshAgent),
        typeof(Code.Gameplay.Features.NavMesh.UpdateNavMesh),
        typeof(Code.Gameplay.Features.Select.MultipleSelectionRequest),
        typeof(Code.Gameplay.Features.Select.Selectable),
        typeof(Code.Gameplay.Features.Select.Selected),
        typeof(Code.Gameplay.Features.Select.SelectedChanged),
        typeof(Code.Gameplay.Features.Select.SelectedNow),
        typeof(Code.Gameplay.Features.Select.SelectingAnimator),
        typeof(Code.Gameplay.Features.Select.SingleSelectionRequest),
        typeof(Code.Gameplay.Features.Select.Unselected),
        typeof(Code.Gameplay.Features.Select.UnselectPreviouslySelectedRequest),
        typeof(Code.Gameplay.Features.Select.UpdateHudControlButtons),
        typeof(Code.Gameplay.Features.Sounds.AudioClipComponent),
        typeof(Code.Gameplay.Features.Sounds.AudioSourceComponent),
        typeof(Code.Gameplay.Features.Sounds.CreateSound),
        typeof(Code.Gameplay.Features.Sounds.Delay),
        typeof(Code.Gameplay.Features.Sounds.InitializeSound),
        typeof(Code.Gameplay.Features.Sounds.MaxPitch),
        typeof(Code.Gameplay.Features.Sounds.MinPitch),
        typeof(Code.Gameplay.Features.Sounds.PlaySoundRequest),
        typeof(Code.Gameplay.Features.Sounds.SoundIdComponent),
        typeof(Code.Gameplay.Features.Sounds.Volume),
        typeof(Code.Gameplay.Features.Units.Alive),
        typeof(Code.Gameplay.Features.Units.AttackReach),
        typeof(Code.Gameplay.Features.Units.CurrentHp),
        typeof(Code.Gameplay.Features.Units.Damage),
        typeof(Code.Gameplay.Features.Units.Dead),
        typeof(Code.Gameplay.Features.Units.LegsPositionOffset),
        typeof(Code.Gameplay.Features.Units.MaxHp),
        typeof(Code.Gameplay.Features.Units.NotifyAlliesAboutTarget),
        typeof(Code.Gameplay.Features.Units.OffsetPositionByLegs),
        typeof(Code.Gameplay.Features.Units.Speed),
        typeof(Code.Gameplay.Features.Units.TeamColorComponent),
        typeof(Code.Gameplay.Features.Units.Unit),
        typeof(Code.Gameplay.Features.Units.UnitTypeIdComponent),
        typeof(Code.Gameplay.Features.UpdateAvoidance.CurrentAvoidancePriority),
        typeof(Code.Gameplay.Features.UpdateAvoidance.IdleAvoidancePriority),
        typeof(Code.Gameplay.Features.UpdateAvoidance.MoveAvoidancePriority)
    };
}
