//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Id = 1;
    public const int InitializationRequest = 2;
    public const int Initialized = 3;
    public const int Processed = 4;
    public const int SelfDestructTimer = 5;
    public const int View = 6;
    public const int ViewPrefab = 7;
    public const int Transform = 8;
    public const int WorldPosition = 9;
    public const int MakeDecisionInterval = 10;
    public const int MakeDecisionRequest = 11;
    public const int MakeDecisionTimer = 12;
    public const int UnitAI = 13;
    public const int UnitDecision = 14;
    public const int AnimateAttack = 15;
    public const int AttackAnimator = 16;
    public const int LookDirection = 17;
    public const int MoveAnimator = 18;
    public const int SelectingAnimator = 19;
    public const int AttackCooldown = 20;
    public const int Attacking = 21;
    public const int AttackInterval = 22;
    public const int AttackRequest = 23;
    public const int CanAttack = 24;
    public const int FinishAttack = 25;
    public const int MakeHit = 26;
    public const int NotAttacking = 27;
    public const int Building = 28;
    public const int BuildTypeId = 29;
    public const int Castle = 30;
    public const int ActionEnded = 31;
    public const int ActionStarted = 32;
    public const int ApplyControlAction = 33;
    public const int CancelControlAction = 34;
    public const int MoveControlAction = 35;
    public const int MoveWithAttackControlAction = 36;
    public const int SelectedAction = 37;
    public const int UnitCommandTypeId = 38;
    public const int CasterId = 39;
    public const int DamageEffect = 40;
    public const int EffectTypeId = 41;
    public const int EffectValue = 42;
    public const int TargetId = 43;
    public const int AllUnitCommandTypeIds = 44;
    public const int FastInteraction = 45;
    public const int CenterPosition = 46;
    public const int CreateHighlightRequest = 47;
    public const int Highlight = 48;
    public const int HighlightEnded = 49;
    public const int RectTransform = 50;
    public const int Size = 51;
    public const int EndPosition = 52;
    public const int MousePositionOnScreen = 53;
    public const int PositionOnScreen = 54;
    public const int StartPosition = 55;
    public const int ChangeEndDestinationRequest = 56;
    public const int Destination = 57;
    public const int EndDestination = 58;
    public const int Idle = 59;
    public const int Movable = 60;
    public const int Move = 61;
    public const int MoveDirection = 62;
    public const int CreatedNow = 63;
    public const int CreateMoveClickIndicator = 64;
    public const int DestructOldMoveIndicatorRequest = 65;
    public const int MoveClickIndicator = 66;
    public const int AddToNavMeshCachedSources = 67;
    public const int BuildNavMeshAtStart = 68;
    public const int NavMesh = 69;
    public const int NavMeshAgent = 70;
    public const int NavMeshCollectSourcesCache = 71;
    public const int NavMeshCollectSources = 72;
    public const int NavMeshRootSources = 73;
    public const int NavMeshSurface = 74;
    public const int NotAddedNavMeshRootSource = 75;
    public const int TurnOnNavMeshAgent = 76;
    public const int UpdateNavMesh = 77;
    public const int MultipleSelectionRequest = 78;
    public const int Selectable = 79;
    public const int Selected = 80;
    public const int SelectedChanged = 81;
    public const int SelectedNow = 82;
    public const int SingleSelectionRequest = 83;
    public const int Unselected = 84;
    public const int UnselectPreviouslySelectedRequest = 85;
    public const int UpdateHudControlButtons = 86;
    public const int CollectReachedTargetsInterval = 87;
    public const int CollectReachedTargetsRadius = 88;
    public const int CollectReachedTargetsRequest = 89;
    public const int CollectReachedTargetsTimer = 90;
    public const int CollectTargetsInterval = 91;
    public const int CollectTargetsRadius = 92;
    public const int CollectTargetsRequest = 93;
    public const int CollectTargetsTimer = 94;
    public const int ReachedTargetBuffer = 95;
    public const int TargetBuffer = 96;
    public const int Alive = 97;
    public const int AttackReach = 98;
    public const int CurrentHp = 99;
    public const int Damage = 100;
    public const int Dead = 101;
    public const int MaxHp = 102;
    public const int Speed = 103;
    public const int TeamColor = 104;
    public const int Unit = 105;
    public const int CurrentAvoidancePriority = 106;
    public const int IdleAvoidancePriority = 107;
    public const int MoveAvoidancePriority = 108;

    public const int TotalComponents = 109;

    public static readonly string[] componentNames = {
        "Destructed",
        "Id",
        "InitializationRequest",
        "Initialized",
        "Processed",
        "SelfDestructTimer",
        "View",
        "ViewPrefab",
        "Transform",
        "WorldPosition",
        "MakeDecisionInterval",
        "MakeDecisionRequest",
        "MakeDecisionTimer",
        "UnitAI",
        "UnitDecision",
        "AnimateAttack",
        "AttackAnimator",
        "LookDirection",
        "MoveAnimator",
        "SelectingAnimator",
        "AttackCooldown",
        "Attacking",
        "AttackInterval",
        "AttackRequest",
        "CanAttack",
        "FinishAttack",
        "MakeHit",
        "NotAttacking",
        "Building",
        "BuildTypeId",
        "Castle",
        "ActionEnded",
        "ActionStarted",
        "ApplyControlAction",
        "CancelControlAction",
        "MoveControlAction",
        "MoveWithAttackControlAction",
        "SelectedAction",
        "UnitCommandTypeId",
        "CasterId",
        "DamageEffect",
        "EffectTypeId",
        "EffectValue",
        "TargetId",
        "AllUnitCommandTypeIds",
        "FastInteraction",
        "CenterPosition",
        "CreateHighlightRequest",
        "Highlight",
        "HighlightEnded",
        "RectTransform",
        "Size",
        "EndPosition",
        "MousePositionOnScreen",
        "PositionOnScreen",
        "StartPosition",
        "ChangeEndDestinationRequest",
        "Destination",
        "EndDestination",
        "Idle",
        "Movable",
        "Move",
        "MoveDirection",
        "CreatedNow",
        "CreateMoveClickIndicator",
        "DestructOldMoveIndicatorRequest",
        "MoveClickIndicator",
        "AddToNavMeshCachedSources",
        "BuildNavMeshAtStart",
        "NavMesh",
        "NavMeshAgent",
        "NavMeshCollectSourcesCache",
        "NavMeshCollectSources",
        "NavMeshRootSources",
        "NavMeshSurface",
        "NotAddedNavMeshRootSource",
        "TurnOnNavMeshAgent",
        "UpdateNavMesh",
        "MultipleSelectionRequest",
        "Selectable",
        "Selected",
        "SelectedChanged",
        "SelectedNow",
        "SingleSelectionRequest",
        "Unselected",
        "UnselectPreviouslySelectedRequest",
        "UpdateHudControlButtons",
        "CollectReachedTargetsInterval",
        "CollectReachedTargetsRadius",
        "CollectReachedTargetsRequest",
        "CollectReachedTargetsTimer",
        "CollectTargetsInterval",
        "CollectTargetsRadius",
        "CollectTargetsRequest",
        "CollectTargetsTimer",
        "ReachedTargetBuffer",
        "TargetBuffer",
        "Alive",
        "AttackReach",
        "CurrentHp",
        "Damage",
        "Dead",
        "MaxHp",
        "Speed",
        "TeamColor",
        "Unit",
        "CurrentAvoidancePriority",
        "IdleAvoidancePriority",
        "MoveAvoidancePriority"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Id),
        typeof(Code.Common.InitializationRequest),
        typeof(Code.Common.Initialized),
        typeof(Code.Common.Processed),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.AI.MakeDecisionInterval),
        typeof(Code.Gameplay.Features.AI.MakeDecisionRequest),
        typeof(Code.Gameplay.Features.AI.MakeDecisionTimer),
        typeof(Code.Gameplay.Features.AI.UnitAIComponent),
        typeof(Code.Gameplay.Features.AI.UnitDecisionComponent),
        typeof(Code.Gameplay.Features.Animations.AnimateAttack),
        typeof(Code.Gameplay.Features.Animations.AttackAnimator),
        typeof(Code.Gameplay.Features.Animations.LookDirection),
        typeof(Code.Gameplay.Features.Animations.MoveAnimator),
        typeof(Code.Gameplay.Features.Animations.SelectingAnimator),
        typeof(Code.Gameplay.Features.Battle.AttackCooldown),
        typeof(Code.Gameplay.Features.Battle.Attacking),
        typeof(Code.Gameplay.Features.Battle.AttackInterval),
        typeof(Code.Gameplay.Features.Battle.AttackRequest),
        typeof(Code.Gameplay.Features.Battle.CanAttack),
        typeof(Code.Gameplay.Features.Battle.FinishAttack),
        typeof(Code.Gameplay.Features.Battle.MakeHit),
        typeof(Code.Gameplay.Features.Battle.NotAttacking),
        typeof(Code.Gameplay.Features.Build.Building),
        typeof(Code.Gameplay.Features.Build.BuildTypeIdComponent),
        typeof(Code.Gameplay.Features.Build.Castle),
        typeof(Code.Gameplay.Features.ControlAction.ActionEnded),
        typeof(Code.Gameplay.Features.ControlAction.ActionStarted),
        typeof(Code.Gameplay.Features.ControlAction.ApplyControlAction),
        typeof(Code.Gameplay.Features.ControlAction.CancelControlAction),
        typeof(Code.Gameplay.Features.ControlAction.MoveControlAction),
        typeof(Code.Gameplay.Features.ControlAction.MoveWithAttackControlAction),
        typeof(Code.Gameplay.Features.ControlAction.SelectedAction),
        typeof(Code.Gameplay.Features.ControlAction.UnitCommandTypeIdComponent),
        typeof(Code.Gameplay.Features.Effects.CasterId),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.EffectTypeIdComponent),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.FastInteraction.AllUnitCommandTypeIds),
        typeof(Code.Gameplay.Features.FastInteraction.FastInteraction),
        typeof(Code.Gameplay.Features.Highlight.CenterPosition),
        typeof(Code.Gameplay.Features.Highlight.CreateHighlightRequest),
        typeof(Code.Gameplay.Features.Highlight.Highlight),
        typeof(Code.Gameplay.Features.Highlight.HighlightEnded),
        typeof(Code.Gameplay.Features.Highlight.RectTransformComponent),
        typeof(Code.Gameplay.Features.Highlight.Size),
        typeof(Code.Gameplay.Features.Input.EndPosition),
        typeof(Code.Gameplay.Features.Input.MousePositionOnScreen),
        typeof(Code.Gameplay.Features.Input.PositionOnScreen),
        typeof(Code.Gameplay.Features.Input.StartPosition),
        typeof(Code.Gameplay.Features.Move.ChangeEndDestinationRequest),
        typeof(Code.Gameplay.Features.Move.Destination),
        typeof(Code.Gameplay.Features.Move.EndDestination),
        typeof(Code.Gameplay.Features.Move.Idle),
        typeof(Code.Gameplay.Features.Move.Movable),
        typeof(Code.Gameplay.Features.Move.Move),
        typeof(Code.Gameplay.Features.Move.MoveDirection),
        typeof(Code.Gameplay.Features.MoveIndicator.CreatedNow),
        typeof(Code.Gameplay.Features.MoveIndicator.CreateMoveClickIndicator),
        typeof(Code.Gameplay.Features.MoveIndicator.DestructOldMoveIndicatorRequest),
        typeof(Code.Gameplay.Features.MoveIndicator.MoveClickIndicator),
        typeof(Code.Gameplay.Features.NavMesh.AddToNavMeshCachedSources),
        typeof(Code.Gameplay.Features.NavMesh.BuildNavMeshAtStart),
        typeof(Code.Gameplay.Features.NavMesh.NavMesh),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshAgentComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshCollectSourcesCacheComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshCollectSourcesComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshRootSourcesComponent),
        typeof(Code.Gameplay.Features.NavMesh.NavMeshSurfaceComponent),
        typeof(Code.Gameplay.Features.NavMesh.NotAddedNavMeshRootSource),
        typeof(Code.Gameplay.Features.NavMesh.TurnOnNavMeshAgent),
        typeof(Code.Gameplay.Features.NavMesh.UpdateNavMesh),
        typeof(Code.Gameplay.Features.Select.SelectComponents.MultipleSelectionRequest),
        typeof(Code.Gameplay.Features.Select.SelectComponents.Selectable),
        typeof(Code.Gameplay.Features.Select.SelectComponents.Selected),
        typeof(Code.Gameplay.Features.Select.SelectComponents.SelectedChanged),
        typeof(Code.Gameplay.Features.Select.SelectComponents.SelectedNow),
        typeof(Code.Gameplay.Features.Select.SelectComponents.SingleSelectionRequest),
        typeof(Code.Gameplay.Features.Select.SelectComponents.Unselected),
        typeof(Code.Gameplay.Features.Select.SelectComponents.UnselectPreviouslySelectedRequest),
        typeof(Code.Gameplay.Features.Select.SelectComponents.UpdateHudControlButtons),
        typeof(Code.Gameplay.Features.TargetCollection.CollectReachedTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectReachedTargetsRadius),
        typeof(Code.Gameplay.Features.TargetCollection.CollectReachedTargetsRequest),
        typeof(Code.Gameplay.Features.TargetCollection.CollectReachedTargetsTimer),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsRadius),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsRequest),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsTimer),
        typeof(Code.Gameplay.Features.TargetCollection.ReachedTargetBuffer),
        typeof(Code.Gameplay.Features.TargetCollection.TargetBuffer),
        typeof(Code.Gameplay.Features.Units.Alive),
        typeof(Code.Gameplay.Features.Units.AttackReach),
        typeof(Code.Gameplay.Features.Units.CurrentHp),
        typeof(Code.Gameplay.Features.Units.Damage),
        typeof(Code.Gameplay.Features.Units.Dead),
        typeof(Code.Gameplay.Features.Units.MaxHp),
        typeof(Code.Gameplay.Features.Units.Speed),
        typeof(Code.Gameplay.Features.Units.TeamColorComponent),
        typeof(Code.Gameplay.Features.Units.Unit),
        typeof(Code.Gameplay.Features.UpdateAvoidance.CurrentAvoidancePriority),
        typeof(Code.Gameplay.Features.UpdateAvoidance.IdleAvoidancePriority),
        typeof(Code.Gameplay.Features.UpdateAvoidance.MoveAvoidancePriority)
    };
}
